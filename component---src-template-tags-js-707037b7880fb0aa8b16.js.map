{"version":3,"sources":["webpack:///./src/template/tags.js"],"names":["Tags","data","allMdx","tagHeader","edges","totalCount","style","paddingBottom","className","map","node","key","id","Body","to","fields","slug","objectFit","fluid","frontmatter","featuredImage","childImageSharp","title","date","Text","excerpt"],"mappings":"8FAAA,qGAyGeA,UAnGF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACKA,EAAKC,OAC7BC,GAFmB,EACjBC,MACO,sBAFU,EACVC,YAEf,OACE,kBAAC,IAAD,KACE,gCACE,wBAAIC,MAAO,CAAEC,cAAe,SAAWJ,IAEzC,kBAAC,IAAD,CAAWK,UAAU,gBAClBP,EAAKC,OAAOE,MAAMK,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACrB,yBAAKC,IAAKD,EAAKE,IACb,kBAAC,IAAD,CAAMJ,UAAU,cACd,kBAAC,IAAKK,KAAN,KACE,kBAAC,OAAD,CAAMC,GAAIJ,EAAKK,OAAOC,MACpB,gCACE,kBAAC,IAAD,CACER,UAAU,eACVF,MAAO,CAAEW,UAAW,WACpBC,MACER,EAAKS,YAAYC,cAAcC,gBAAgBH,SAIrD,wBAAIV,UAAU,aAAaE,EAAKS,YAAYG,OAC5C,0BAAMd,UAAU,aAAaE,EAAKS,YAAYI,MAC9C,6BACA,kBAAC,IAAKC,KAAN,CAAWhB,UAAU,aACW,KAA7BE,EAAKS,YAAYM,QACdf,EAAKe,QACLf,EAAKS,YAAYM","file":"component---src-template-tags-js-707037b7880fb0aa8b16.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { Card, Container } from \"react-bootstrap\"\r\nimport Layout from \"../components/layout\"\r\nimport Img from \"gatsby-image\"\r\nconst Tags = ({ data }) => {\r\n  const { edges, totalCount } = data.allMdx\r\n  const tagHeader = `Number of posts is ${totalCount}`\r\n  return (\r\n    <Layout>\r\n      <center>\r\n        <h1 style={{ paddingBottom: \"20px\" }}>{tagHeader}</h1>\r\n      </center>\r\n      <Container className=\"site-content\">\r\n        {data.allMdx.edges.map(({ node }) => (\r\n          <div key={node.id}>\r\n            <Card className=\"index-card\">\r\n              <Card.Body>\r\n                <Link to={node.fields.slug}>\r\n                  <center>\r\n                    <Img\r\n                      className=\"featured-img\"\r\n                      style={{ objectFit: \"contain\" }}\r\n                      fluid={\r\n                        node.frontmatter.featuredImage.childImageSharp.fluid\r\n                      }\r\n                    />\r\n                  </center>\r\n                  <h4 className=\"cardTitle\">{node.frontmatter.title}</h4>\r\n                  <span className=\"textMuted\">{node.frontmatter.date}</span>\r\n                  <hr />\r\n                  <Card.Text className=\"textMuted\">\r\n                    {node.frontmatter.excerpt === \"\"\r\n                      ? node.excerpt\r\n                      : node.frontmatter.excerpt}\r\n                  </Card.Text>\r\n                </Link>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        ))}\r\n      </Container>\r\n    </Layout>\r\n  )\r\n}\r\nTags.propTypes = {\r\n  pageContext: PropTypes.shape({\r\n    tag: PropTypes.string.isRequired,\r\n  }),\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      totalCount: PropTypes.number.isRequired,\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            frontmatter: PropTypes.shape({\r\n              title: PropTypes.string.isRequired,\r\n            }),\r\n            fields: PropTypes.shape({\r\n              slug: PropTypes.string.isRequired,\r\n            }),\r\n          }),\r\n        }).isRequired\r\n      ),\r\n    }),\r\n  }),\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    allMdx(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: {\r\n        frontmatter: { tags: { in: [$tag] }, type: { ne: \"newsletter\" } }\r\n      }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            tags\r\n            excerpt\r\n            featuredImage {\r\n              childImageSharp {\r\n                fluid(maxWidth: 300) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n          excerpt(pruneLength: 150)\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Tags\r\n"],"sourceRoot":""}