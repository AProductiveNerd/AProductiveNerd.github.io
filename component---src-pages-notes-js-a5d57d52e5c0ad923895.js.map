{"version":3,"sources":["webpack:///./src/pages/notes.js"],"names":["Home","data","title","className","allMdx","edges","map","node","key","id","Body","frontmatter","tags","tagItem","to","fields","slug","style","objectFit","fluid","featuredImage","childImageSharp","author","date","category","rating","Text","excerpt","query"],"mappings":"4FAAA,+LAOe,SAASA,EAAT,GAAyB,IAATC,EAAQ,EAARA,KAC7B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,aACX,kBAAC,IAAD,CAAWC,UAAU,gBAClBF,EAAKG,OAAOC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACrB,yBAAKC,IAAKD,EAAKE,IACb,kBAAC,IAAD,CAAMN,UAAU,cACd,kBAAC,IAAKO,KAAN,KACE,uBAAGP,UAAU,YACVI,EAAKI,YAAYC,KAAKN,KAAI,SAAAO,GAAO,OAChC,kBAAC,IAAD,CACEV,UAAU,UACVW,GAAE,SAAWD,EACbL,IAAKK,GAEJA,OAIP,kBAAC,IAAD,CAAMC,GAAIP,EAAKQ,OAAOC,MACpB,gCACE,kBAAC,IAAD,CACEb,UAAU,eACVc,MAAO,CAAEC,UAAW,WACpBC,MACEZ,EAAKI,YAAYS,cAAcC,gBAAgBF,SAIrD,wBAAIhB,UAAU,aAAaI,EAAKI,YAAYT,OAC5C,0BAAMC,UAAU,aAAhB,WACWI,EAAKI,YAAYW,QAE5B,6BACA,0BAAMnB,UAAU,aAAaI,EAAKI,YAAYY,MAC9C,6BACA,0BAAMpB,UAAU,aAAaI,EAAKI,YAAYa,UAC9C,0BAAMrB,UAAU,aACbI,EAAKI,YAAYc,OAClB,8BAEF,kBAAC,IAAKC,KAAN,CAAWvB,UAAU,aACW,KAA7BI,EAAKI,YAAYgB,QACdpB,EAAKoB,QACLpB,EAAKI,YAAYgB,kBAYlC,IAAMC,EAAK","file":"component---src-pages-notes-js-a5d57d52e5c0ad923895.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport { Card, Container } from \"react-bootstrap\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo.js\"\r\nimport Img from \"gatsby-image\"\r\n\r\nexport default function Home({ data }) {\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"ðŸ’¸ Notes\" />\r\n      <Container className=\"site-content\">\r\n        {data.allMdx.edges.map(({ node }) => (\r\n          <div key={node.id}>\r\n            <Card className=\"index-card\">\r\n              <Card.Body>\r\n                <p className=\"tagArray\">\r\n                  {node.frontmatter.tags.map(tagItem => (\r\n                    <Link\r\n                      className=\"tagItem\"\r\n                      to={`/tags/${tagItem}`}\r\n                      key={tagItem}\r\n                    >\r\n                      {tagItem}\r\n                    </Link>\r\n                  ))}\r\n                </p>\r\n                <Link to={node.fields.slug}>\r\n                  <center>\r\n                    <Img\r\n                      className=\"featured-img\"\r\n                      style={{ objectFit: \"contain\" }}\r\n                      fluid={\r\n                        node.frontmatter.featuredImage.childImageSharp.fluid\r\n                      }\r\n                    />\r\n                  </center>\r\n                  <h4 className=\"cardTitle\">{node.frontmatter.title}</h4>\r\n                  <span className=\"textMuted\">\r\n                    Author: {node.frontmatter.author}\r\n                  </span>\r\n                  <br />\r\n                  <span className=\"textMuted\">{node.frontmatter.date}</span>\r\n                  <br />\r\n                  <span className=\"textMuted\">{node.frontmatter.category}</span>\r\n                  <span className=\"textMuted\">\r\n                    {node.frontmatter.rating}\r\n                    <hr />\r\n                  </span>\r\n                  <Card.Text className=\"textMuted\">\r\n                    {node.frontmatter.excerpt === \"\"\r\n                      ? node.excerpt\r\n                      : node.frontmatter.excerpt}\r\n                  </Card.Text>\r\n                </Link>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        ))}\r\n      </Container>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const query = graphql`\r\n  query {\r\n    allMdx(\r\n      sort: { fields: frontmatter___date, order: DESC }\r\n      filter: { frontmatter: { type: { eq: \"books\" } } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            tags\r\n            excerpt\r\n            author\r\n            rating\r\n            category\r\n            featuredImage {\r\n              childImageSharp {\r\n                fluid(maxWidth: 300) {\r\n                  ...GatsbyImageSharpFluid\r\n                }\r\n              }\r\n            }\r\n          }\r\n          excerpt(pruneLength: 150)\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}